{"version":3,"sources":["stylesheets/WordDisplay.module.css","stylesheets/PhonemeReference.module.css","components/SearchBar.js","lib/symbols.js","components/PhonemeDisplay.js","components/WordDisplay.js","components/PhraseDisplay.js","lib/phonemes.js","components/PhonemeReference.js","api/decoder.js","components/PhonemeContainer.js","components/App.js","serviceWorker.js","index.js","stylesheets/PhonemeDisplay.module.css"],"names":["module","exports","wordDisplay","word","phonemeWrap","phonemeReference","boxes","boxWrap","groupName","group","phoneme","phonemeKey","title","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","onChange","bind","assertThisInitialized","onSubmit","event","setState","target","value","preventDefault","onSearch","react_default","a","createElement","htmlFor","id","type","Component","phonemeSymbols","AE","shape","color","IH","AA","EH","IY","UW","AH","AO","UH","AW","OY","AY","EY","OW","D","T","CH","G","B","P","JH","K","NG","M","N","R","ER","Y","W","L","F","HH","SH","V","ZH","DH","TH","Z","S","colorCodes","red","orange","yellow","green","blue","purple","brown","black","white","PhonemeDisplay","_phonemeToSymbol","colorCode","colorToCode","className","styles","phonemeDisplay","symbolWrap","symbol","width","height","viewBox","stroke","cx","cy","r","stroke-width","fill","x","y","points","WordDisplay","Fragment","phonemes","map","components_PhonemeDisplay","PhraseDisplay","phrase","components_WordDisplay","layout","Monophthongs","Diphthongs","Stops","Affricates","Nasals","R-colored vowels","Liquids","Semivowels","Fricatives","words","reference","categoryDict","wordDict","defDict","box","def","PhonemeReference","onClick","onToggle","isOpen","defs","Decoder","stored","window","localStorage","getItem","JSON","parse","undefined","decoded","setItem","stringify","removePunctuation","toLowerCase","split","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","checkCache","queryWord","sent","addToCache","abrupt","stop","_x2","apply","arguments","text","test","slice","replace","substring","indexOf","trim","length","afterColon","tags","removeTrailingDigit","ipa","url","fetch","response","json","definition","definitionToDecoded","PhonemeContainer","searched","referenceIsOpen","referenceDefs","decoder","handleSearch","handleReferenceToggle","_this2","decodePhrase","then","Promise","all","values","lastState","_this3","allWords","join","reduce","dict","objectSpread","defineProperty","components_SearchBar","components_PhraseDisplay","components_PhonemeReference","App","components_PhonemeContainer","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a14442ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordDisplay\":\"WordDisplay_wordDisplay__3borT\",\"word\":\"WordDisplay_word__3hMO2\",\"phonemeWrap\":\"WordDisplay_phonemeWrap__2bI7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonemeReference\":\"PhonemeReference_phonemeReference__2fHYF\",\"boxes\":\"PhonemeReference_boxes__3c2v5\",\"boxWrap\":\"PhonemeReference_boxWrap__3o6ly\",\"groupName\":\"PhonemeReference_groupName__DvOU6\",\"group\":\"PhonemeReference_group__1Sh9K\",\"phoneme\":\"PhonemeReference_phoneme__nRZ7L\",\"phonemeKey\":\"PhonemeReference_phonemeKey__1y3h7\",\"title\":\"PhonemeReference_title__3yZlk\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: ''\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.props.onSearch(this.state.term);\n    this.setState({ term: '' });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label htmlFor='term'></label>\n        <input id='term' type='text' value={this.state.term} onChange={this.onChange} />\n        <button type='submit'>Search</button>\n      </form>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func\n};\n\nexport default SearchBar;\n","export function phonemeToSymbol(phoneme) {\n  return phonemeSymbols[phoneme];\n}\n\nexport const phonemeSymbols = {\n  'AE': { shape: 'circle', color: 'red'},\n  'IH': { shape: 'circle', color: 'orange'},\n  'AA': { shape: 'circle', color: 'yellow'},\n  'EH': { shape: 'circle', color: 'green'},\n  'IY': { shape: 'circle', color: 'blue'},\n  'UW': { shape: 'circle', color: 'purple'},\n  'AH': { shape: 'circle', color: 'brown'},\n  'AO': { shape: 'circle', color: 'black'},\n  'UH': { shape: 'circle', color: 'white'},\n  'AW': { shape: 'square', color: 'red'},\n  'OY': { shape: 'square', color: 'orange'},\n  'AY': { shape: 'square', color: 'yellow'},\n  'EY': { shape: 'square', color: 'blue'},\n  'OW': { shape: 'square', color: 'black'},\n  'D': { shape: 'triangle', color: 'red'},\n  'T': { shape: 'triangle', color: 'orange'},\n  'CH': { shape: 'triangle', color: 'yellow'},\n  'G': { shape: 'triangle', color: 'green'},\n  'B': { shape: 'triangle', color: 'blue'},\n  'P': { shape: 'triangle', color: 'purple'},\n  'JH': { shape: 'triangle', color: 'brown'},\n  'K': { shape: 'triangle', color: 'black'},\n  'NG': { shape: 'rhombus', color: 'green'},\n  'M': { shape: 'rhombus', color: 'brown'},\n  'N': { shape: 'rhombus', color: 'black'},\n  'R': { shape: 'star', color: 'red'},\n  'ER': { shape: 'star', color: 'orange'},\n  'Y': { shape: 'star', color: 'yellow'},\n  'W': { shape: 'star', color: 'blue'},\n  'L': { shape: 'star', color: 'purple'},\n  'F': { shape: 'hexagon', color: 'red'},\n  'HH': { shape: 'hexagon', color: 'orange'},\n  'SH': { shape: 'hexagon', color: 'yellow'},\n  'V': { shape: 'hexagon', color: 'green'},\n  'ZH': { shape: 'hexagon', color: 'blue'},\n  'DH': { shape: 'hexagon', color: 'purple'},\n  'TH': { shape: 'hexagon', color: 'brown'},\n  'Z': { shape: 'hexagon', color: 'black'},\n  'S': { shape: 'hexagon', color: 'white'}\n};\n\nexport function colorToCode(color) {\n  return colorCodes[color];\n}\n\nexport const colorCodes = {\n  'red': '#ff0000',\n  'orange': '#ff8000',\n  'yellow': '#ffff00',\n  'green': '#00dd00',\n  'blue': '#0000ff',\n  'purple': '#a000f0',\n  'brown': '#905018',\n  'black': '#000000',\n  'white': '#ffffff'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { phonemeToSymbol, colorToCode } from '../lib/symbols';\nimport styles from '../stylesheets/PhonemeDisplay.module.css';\n\nfunction symbol(shape, color) {\n  const stroke = '#404040';\n  if(shape === 'circle') {\n    return (<circle cx=\"50%\" cy=\"50%\" r=\"45%\" stroke-width=\"5%\" stroke={stroke} fill={color} />);\n  } else if(shape === 'square') {\n    return (<rect x=\"5%\" y=\"5%\" width=\"90%\" height=\"90%\" stroke-width=\"5%\" stroke={stroke} fill={color} />);\n  } else if(shape === 'triangle') {\n    return (<polygon points=\"5,95 95,95 50,5\" stroke-width=\"5%\" stroke={stroke} fill={color} />);\n  } else if(shape === 'rhombus') {\n    return (<polygon points=\"50,95 90,50 50,5 10,50\" stroke-width=\"5%\" stroke={stroke} fill={color} />);\n  } else if(shape === 'star') {\n    return (<polygon points=\"50,0 38.8,34.5 2.4,34.5 31.8,55.9 20.6,90.5 50,69.1 79.4,90.5 68.2,55.9 97.6,34.5 61.2,34.5\" stroke-width=\"5%\" stroke={stroke} fill={color} />);\n  } else if(shape === 'hexagon') {\n    return (<polygon points=\"98,50 74,91.6 26,91.6 2,50 26,8.4 74,8.4\" stroke-width=\"5%\" stroke={stroke} fill={color} />);\n  } else {\n    return null;\n  };\n}\n\nfunction PhonemeDisplay(props) {\n  const { shape, color } = phonemeToSymbol(props.phoneme);\n  const colorCode = colorToCode(color);\n  return (\n    <div className={styles.phonemeDisplay}>\n      <div className={styles.symbolWrap}>\n        <div className={styles.symbol}>\n          <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n            {symbol(shape, colorCode)}\n          </svg>\n        </div>\n      </div>\n      <div className={styles.phoneme}>\n        {props.phoneme}\n      </div>\n    </div>\n  );\n}\n\nPhonemeDisplay.propTypes = {\n  phoneme: PropTypes.string\n};\n\nexport default PhonemeDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PhonemeDisplay from './PhonemeDisplay';\nimport styles from '../stylesheets/WordDisplay.module.css';\n\nfunction WordDisplay(props) {\n  return (\n    <React.Fragment>\n      { props.word && (\n      <div className={styles.wordDisplay}>\n        <div className={styles.word}>\n          {props.word.word}\n        </div>\n        <div className={styles.phonemeWrap}>\n          {props.word.phonemes.map((phoneme) => (\n            <PhonemeDisplay phoneme={phoneme} />\n          ))}\n        </div>\n      </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nWordDisplay.propTypes = {\n  word: PropTypes.object\n};\n\nexport default WordDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WordDisplay from './WordDisplay';\n\nfunction PhraseDisplay(props) {\n  return (\n    <div className='phraseDisplay'>\n      {props.phrase.map((word) => (\n        <WordDisplay word={word} />\n      ))}\n    </div>\n  );\n}\n\nPhraseDisplay.propTypes = {\n  word: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default PhraseDisplay;\n","export const layout = [\n  ['Monophthongs'],\n  ['Diphthongs', 'Nasals'],\n  ['Stops', 'Affricates'],\n  ['Fricatives'],\n  ['Liquids', 'R-colored vowels', 'Semivowels'],\n];\n\nexport const phonemes = {\n  'Monophthongs' : ['AE', 'IH', 'AA', 'EH', 'IY', 'UW', 'AH', 'AO', 'UH'],\n  'Diphthongs' : ['AW', 'OY', 'AY', 'EY', 'OW'],\n  'Stops' : ['D', 'T', 'G', 'B', 'P', 'K'],\n  'Affricates' : ['CH', 'JH'],\n  'Nasals' : ['NG', 'M', 'N'],\n  'R-colored vowels' : ['ER'],\n  'Liquids' : ['R', 'L'],\n  'Semivowels' : ['Y', 'W'],\n  'Fricatives' : ['F', 'HH', 'SH', 'V', 'ZH', 'DH', 'TH', 'Z', 'S']\n};\n\nexport const words = {\n  'AO': 'fought',\n  'AA': 'lot',\n  'IY': 'feet',\n  'UW': 'suit',\n  'EH': 'fed',\n  'IH': 'sit',\n  'UH': 'book',\n  'AH': 'hut',\n  'AE': 'hat',\n  'EY': 'cake',\n  'AY': 'hide',\n  'OW': 'boat',\n  'AW': 'shout',\n  'OY': 'toys',\n  'P': 'peak',\n  'B': 'beat',\n  'T': 'team',\n  'D': 'date',\n  'K': 'kite',\n  'G': 'grow',\n  'CH': 'cheese',\n  'JH': 'jail',\n  'F': 'feel',\n  'V': 'vote',\n  'TH': 'thin',\n  'DH': 'that',\n  'S': 'seat',\n  'Z': 'zip',\n  'SH': 'shout',\n  'ZH': 'azure',\n  'HH': 'heat',\n  'M': 'meet',\n  'N': 'near',\n  'NG': 'sing',\n  'ER': 'hurt',\n  'L': 'late',\n  'R': 'read',\n  'Y': 'yes',\n  'W': 'week'\n};\n","import React from 'react';\n//??? add prop types to phoneme reference\n//import PropTypes from 'prop-types';\nimport PhonemeDisplay from './PhonemeDisplay';\nimport WordDisplay from './WordDisplay';\nimport { layout, phonemes } from '../lib/phonemes';\nimport styles from '../stylesheets/PhonemeReference.module.css';\n\n//??? clean up phoneme reference functions\nfunction group(groupName, categoryDict, wordDict, defDict) {\n  const phonemes = categoryDict[groupName];\n  return (\n    <div className={styles.group}>\n      {phonemes.map((phoneme) => {\n        const def = defDict[wordDict[phoneme]];\n        return (\n          <div className={styles.phoneme}>\n            <span className={styles.phonemeKey}>\n              <PhonemeDisplay phoneme={phoneme}/>\n            </span>\n            <WordDisplay word={def}/>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction reference(layout, categoryDict, wordDict, defDict) {\n  const boxes = layout.map((box) => (\n    <div className={styles.boxWrap}>\n      {box.map((groupName) => (\n        <React.Fragment>\n          <div className={styles.groupName}>{groupName}</div>\n          {group(groupName, categoryDict, wordDict, defDict)}\n        </React.Fragment>\n      ))}\n    </div>\n  ));\n  return boxes;\n}\n\nfunction PhonemeReference(props) {\n  return (\n    <div className='phonemeReference'>\n      <div className={styles.phonemeReference}>\n        <div className={styles.title} onClick={props.onToggle}>\n          Phoneme Reference\n        </div>\n        <div className={styles.boxes}>\n          { props.isOpen ? reference(layout, phonemes, props.words, props.defs) : null }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PhonemeReference;\n","class Decoder {\n  static removeTrailingDigit(text) {\n    return (/\\d$/.test(text) ? text.slice(0, -1) : text);\n  }\n\n  static removePunctuation(text) {\n    return text.replace(/[.,!?]/g, '');\n  }\n\n  static afterColon(text) {\n    return text.substring(text.indexOf(':') + 1).trim();\n  }\n\n  static definitionToDecoded(def) {\n    if(def.length === 0)\n      return {};\n\n    const word = def[0].word;\n    const phonemesText = Decoder.afterColon(def[0].tags[0]);\n    const phonemes = phonemesText.split(' ').map(Decoder.removeTrailingDigit);\n    const ipa = Decoder.afterColon(def[0].tags[1]);\n    return { \n      word,\n      phonemes,\n      ipa\n    };\n  }\n\n  checkCache(word) {\n    const stored = window.localStorage && window.localStorage.getItem(word);\n    return (stored && JSON.parse(stored)) || undefined;\n  }\n\n  addToCache(decoded) {\n    if(window.localStorage) {\n      window.localStorage.setItem(decoded.word, JSON.stringify(decoded));\n    }\n  }\n\n  static async queryWord(word) {\n    const url = `https://api.datamuse.com/words?sp=${word.toLowerCase()}&md=r+d&ipa=1&max=1`;\n    const response = await fetch(url);\n    const definition = await response.json();\n    return Decoder.definitionToDecoded(definition);\n  }\n\n  async decodePhrase(phrase) {\n    const words = Decoder.removePunctuation(phrase.toLowerCase()).split(' ');\n    return words.map(async (word) => {\n      let decoded = this.checkCache(word);\n      if(!decoded) {\n        decoded = await Decoder.queryWord(word);\n        this.addToCache(decoded);\n      }\n      return decoded;\n    });\n  }\n}\n\nexport default Decoder;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport PhraseDisplay from './PhraseDisplay';\nimport PhonemeReference from './PhonemeReference';\nimport Decoder from '../api/decoder';\nimport { words } from '../lib/phonemes';\n\nclass PhonemeContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searched: [],\n      referenceIsOpen: true,\n      referenceDefs: {}\n    };\n    this.decoder = new Decoder();\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReferenceToggle = this.handleReferenceToggle.bind(this);\n  }\n\n  handleSearch(term) {\n    if(term) {\n      this.decoder.decodePhrase(term).then((decoded) => {\n        Promise.all(decoded).then((values) => {\n          this.setState({ searched: values });\n        });\n      });\n    }\n  }\n\n  handleReferenceToggle() {\n    this.setState((lastState) => ({ \n      referenceIsOpen: !lastState.referenceIsOpen\n    }));\n  }\n\n  componentDidMount() {\n    const allWords = Object.values(words).join(' ');\n    this.decoder.decodePhrase(allWords).then((decoded) => {\n      Promise.all(decoded).then((values) => {\n        const defs = values.reduce((dict, word) => {\n          return { ...dict, [word.word]: word };\n        }, {});\n        this.setState({ referenceDefs: defs });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <SearchBar onSearch={this.handleSearch} />\n        <PhraseDisplay phrase={this.state.searched} />\n        <PhonemeReference \n          isOpen={this.state.referenceIsOpen} \n          words={words}\n          defs={this.state.referenceDefs}\n          onToggle={this.handleReferenceToggle} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PhonemeContainer;\n","import React from 'react';\nimport PhonemeContainer from './PhonemeContainer';\n\nfunction App(props) {\n  return (\n    <React.Fragment>\n      <header>\n        <h1>Phoneme Finder</h1>\n      </header>\n      <main>\n        <PhonemeContainer />\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './stylesheets/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonemeDisplay\":\"PhonemeDisplay_phonemeDisplay__2QU2V\",\"symbolWrap\":\"PhonemeDisplay_symbolWrap__2QYwL\",\"symbol\":\"PhonemeDisplay_symbol__2Zjt9\",\"phoneme\":\"PhonemeDisplay_phoneme__1nVdz\"};"],"sourceRoot":""}