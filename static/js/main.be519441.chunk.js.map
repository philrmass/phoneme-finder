{"version":3,"sources":["styles/Reference.module.css","styles/TestWord.module.css","styles/FrequencyGraph.module.css","styles/PhonemeDisplay.module.css","styles/Test.module.css","styles/Common.module.css","styles/WordDisplay.module.css","styles/Complete.module.css","styles/App.module.css","lib/storage.js","lib/decoder.js","components/Common.js","lib/symbols.js","components/PhonemeDisplay.js","components/FrequencyGraph.js","components/WordDisplay.js","components/PhraseDisplay.js","components/Complete.js","lib/frequencies.js","lib/phonemes.js","components/Reference.js","components/TestWord.js","components/Test.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","phonemeReference","title","searchDisplay","columns","column","groupName","group","phonemeKey","phoneme","testWord","active","topRow","button","word","phonemeWrap","complete","graph","percent","label","count","bar","spacer","phonemeDisplay","symbolWrap","symbol","testWords","inactiveWords","inactiveWord","common","wordDisplay","subtitle","header","useLocalStorage","key","initialValue","_useState","useState","localValue","localStorage","getItem","JSON","parse","_useState2","Object","slicedToArray","value","setValue","setItem","stringify","decoder","decodedData","setDecodedData","afterColon","text","substring","indexOf","trim","removeTrailingDigit","test","slice","queryWord","_x","_queryWord","apply","this","arguments","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","definition","wrap","_context","prev","next","concat","toLowerCase","fetch","sent","json","abrupt","def","length","phonemes","tags","split","map","ipa","stop","_decodePhrase","_callee3","phrase","words","queried","decodeds","defs","_context3","replace","_ref","_callee2","decoded","_context2","objectSpread","defineProperty","_x3","Promise","all","decodePhrase","_x2","Common","props","isOpen","setIsOpen","react_default","createElement","className","styles","onClick","Fragment","phonemeSymbols","AE","shape","color","IH","AA","EH","IY","UW","AH","AO","UH","AW","OY","AY","EY","OW","D","T","CH","G","B","P","JH","K","NG","M","N","R","ER","Y","W","L","F","HH","SH","V","ZH","DH","TH","Z","S","colorCodes","red","orange","yellow","green","blue","purple","brown","black","white","PhonemeDisplay","_phonemeToSymbol","colorCode","colorToCode","draggable","onDragStart","e","stopPropagation","dataTransfer","setData","width","height","viewBox","stroke","cx","cy","r","strokeWidth","fill","x","y","points","FrequencyGraph","max","values","totalPercent","total","barPercent","toFixed","components_PhonemeDisplay","style","WordDisplay","index","PhraseDisplay","components_WordDisplay","Complete","_useState3","_useState4","frequencyIsOpen","setFrequencyIsOpen","_useState5","_useState6","frequencies","setFrequencies","_useState7","_useState8","frequenciesTotal","setFrequenciesTotal","useEffect","_getFrequencies","zeros","reduce","p","d","sorted","entries","sort","b","entry","getFrequencies","_getFrequencies2","components_FrequencyGraph","components_PhraseDisplay","layout","Monophthongs","Diphthongs","Stops","Affricates","Nasals","R-colored vowels","Liquids","Semivowels","Fricatives","Reference","input","setInput","search","setSearch","searchDefs","setSearchDefs","_useState9","_useState10","referenceDefs","setReferenceDefs","phonemeGroup","then","join","dict","onSubmit","preventDefault","htmlFor","id","type","onChange","target","phonemeColumn","shownCount","setShownCount","isComplete","isActive","classes","onMouseDown","onDoubleClick","onComplete","onActivate","onDragOver","onDrop","dropPhoneme","getData","onRemove","path","createButton","Test","add","setAdd","activeWord","setActiveWord","onAdd","document","getElementById","focus","handleActivate","undefined","filter","TestWord","App","saveUrl","setSaveUrl","_useLocalStorage","_useLocalStorage2","setTest","_useLocalStorage3","_useLocalStorage4","setComplete","_useLocalStorage5","_useLocalStorage6","setDecoded","commonData","c","_useLocalStorage7","_useLocalStorage8","href","download","t","completeWords","data","file","File","window","URL","createObjectURL","components_Test","toConsumableArray","components_Reference","components_Complete","components_Common","Boolean","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be519441.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonemeReference\":\"Reference_phonemeReference__2cVnO\",\"title\":\"Reference_title__3Sqqo\",\"searchDisplay\":\"Reference_searchDisplay__3hVRR\",\"columns\":\"Reference_columns__3BmSP\",\"column\":\"Reference_column__1vVoY\",\"groupName\":\"Reference_groupName__3EPw3\",\"group\":\"Reference_group__15lQH\",\"phonemeKey\":\"Reference_phonemeKey__2qODb\",\"phoneme\":\"Reference_phoneme__yvJPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testWord\":\"TestWord_testWord__3cCGq\",\"active\":\"TestWord_active__3pieK\",\"topRow\":\"TestWord_topRow__I3-eN\",\"button\":\"TestWord_button__2waDw\",\"word\":\"TestWord_word__2txvU\",\"phonemeWrap\":\"TestWord_phonemeWrap__1-aqv\",\"complete\":\"TestWord_complete__2FT9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"FrequencyGraph_graph__1Ekfh\",\"percent\":\"FrequencyGraph_percent__223Kv\",\"label\":\"FrequencyGraph_label__3d7O8\",\"count\":\"FrequencyGraph_count__2RJ1P\",\"bar\":\"FrequencyGraph_bar__n31lJ\",\"spacer\":\"FrequencyGraph_spacer__2y7VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonemeDisplay\":\"PhonemeDisplay_phonemeDisplay__qrkdg\",\"symbolWrap\":\"PhonemeDisplay_symbolWrap__1JoAX\",\"symbol\":\"PhonemeDisplay_symbol__2Uyoc\",\"phoneme\":\"PhonemeDisplay_phoneme__3wI-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testWords\":\"Test_testWords__1rIbF\",\"title\":\"Test_title__2izU3\",\"inactiveWords\":\"Test_inactiveWords__b88SP\",\"inactiveWord\":\"Test_inactiveWord__2q__p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"Common_common__Asuj_\",\"title\":\"Common_title__35WfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordDisplay\":\"WordDisplay_wordDisplay__2Ljrx\",\"word\":\"WordDisplay_word__1A1Jz\",\"phonemeWrap\":\"WordDisplay_phonemeWrap__7WjFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"complete\":\"Complete_complete__1Gjk7\",\"title\":\"Complete_title__X9f6u\",\"subtitle\":\"Complete_subtitle__27N4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__tl37K\"};","import { useState } from 'react';\r\n\r\nexport function useLocalStorage(key, initialValue) {\r\n  const [value, setValue] = useState(() => {\r\n    const localValue = localStorage.getItem(key);\r\n    if (localValue) {\r\n      return JSON.parse(localValue);\r\n    }\r\n    return initialValue;\r\n  });\r\n\r\n  function setLocalValue(localValue) {\r\n    setValue(localValue);\r\n    localStorage.setItem(key, JSON.stringify(localValue));\r\n  };\r\n\r\n  return [value, setLocalValue];\r\n}\r\n","function decoder(decodedData, setDecodedData) {\n  function afterColon(text) {\n    return text.substring(text.indexOf(':') + 1).trim();\n  }\n\n  function removeTrailingDigit(text) {\n    return (/\\d$/.test(text) ? text.slice(0, -1) : text);\n  }\n\n  function definitionToDecoded(def) {\n    if (def.length === 0) {\n      return {};\n    }\n    const word = def[0].word;\n    const phonemesText = afterColon(def[0].tags[0]);\n    const phonemes = phonemesText.split(' ').map(removeTrailingDigit);\n    const ipa = afterColon(def[0].tags[1]);\n    return {\n      word,\n      phonemes,\n      ipa,\n    };\n  }\n\n  async function queryWord(word) {\n    const url = `https://api.datamuse.com/words?sp=${word.toLowerCase()}&md=r+d&ipa=1&max=1`;\n    const response = await fetch(url);\n    const definition = await response.json();\n    return definitionToDecoded(definition);\n  };\n\n  function removePunctuation(text) {\n    return text.replace(/[.,!?]/g, '');\n  }\n\n  async function decodePhrase(phrase) {\n    const words = removePunctuation(phrase.toLowerCase()).split(' ');\n    let queried = {};\n    const decodeds = words.map(async (word) => {\n      let decoded = decodedData[word];\n      if (!decoded) {\n        decoded = await queryWord(word);\n        queried = { ...queried, [decoded.word]: decoded };\n      }\n      return decoded;\n    });\n    const defs = await Promise.all(decodeds);\n    setDecodedData({ ...decodedData, ...queried });\n    return defs;\n  }\n\n  return {\n    decodePhrase,\n  };\n};\n\nexport default decoder;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Common.module.css';\n\nfunction Common(props) {\n  const [isOpen, setIsOpen] = useState(true);\n\n  return (\n    <div className='common'>\n      <div className={styles.common}>\n        <div\n          className={styles.title}\n          onClick={() => setIsOpen(!isOpen)}>\n          Most Common English Words\n        </div>\n        { isOpen && (\n          <React.Fragment>\n            <div className={styles.subtitle}>Phoneme Frequency</div>\n            <div>Common Word</div>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nCommon.propTypes = {\n  defs: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Common;\n","export function phonemeToSymbol(phoneme) {\n  return phonemeSymbols[phoneme];\n}\n\n//??? symbols\nexport const phonemeSymbols = {\n  'AE': { shape: 'circle', color: 'red'},\n  'IH': { shape: 'circle', color: 'orange'},\n  'AA': { shape: 'circle', color: 'yellow'},\n  'EH': { shape: 'circle', color: 'green'},\n  'IY': { shape: 'circle', color: 'blue'},\n  'UW': { shape: 'circle', color: 'purple'},\n  'AH': { shape: 'circle', color: 'brown'},\n  'AO': { shape: 'circle', color: 'black'},\n  'UH': { shape: 'circle', color: 'white'},\n  'AW': { shape: 'square', color: 'red'},\n  'OY': { shape: 'square', color: 'orange'},\n  'AY': { shape: 'square', color: 'yellow'},\n  'EY': { shape: 'square', color: 'blue'},\n  'OW': { shape: 'square', color: 'black'},\n  'D': { shape: 'triangle', color: 'red'},\n  'T': { shape: 'triangle', color: 'orange'},\n  'CH': { shape: 'triangle', color: 'yellow'},\n  'G': { shape: 'triangle', color: 'green'},\n  'B': { shape: 'triangle', color: 'blue'},\n  'P': { shape: 'triangle', color: 'purple'},\n  'JH': { shape: 'triangle', color: 'brown'},\n  'K': { shape: 'triangle', color: 'black'},\n  'NG': { shape: 'rhombus', color: 'green'},\n  'M': { shape: 'rhombus', color: 'brown'},\n  'N': { shape: 'rhombus', color: 'black'},\n  'R': { shape: 'star', color: 'red'},\n  'ER': { shape: 'star', color: 'orange'},\n  'Y': { shape: 'star', color: 'yellow'},\n  'W': { shape: 'star', color: 'blue'},\n  'L': { shape: 'star', color: 'purple'},\n  'F': { shape: 'hexagon', color: 'red'},\n  'HH': { shape: 'hexagon', color: 'orange'},\n  'SH': { shape: 'hexagon', color: 'yellow'},\n  'V': { shape: 'hexagon', color: 'green'},\n  'ZH': { shape: 'hexagon', color: 'blue'},\n  'DH': { shape: 'hexagon', color: 'purple'},\n  'TH': { shape: 'hexagon', color: 'brown'},\n  'Z': { shape: 'hexagon', color: 'black'},\n  'S': { shape: 'hexagon', color: 'white'}\n};\n\nexport function colorToCode(color) {\n  return colorCodes[color];\n}\n\n//??? colors\nexport const colorCodes = {\n  'red': '#ff0000',\n  'orange': '#ff8000',\n  'yellow': '#ffff00',\n  'green': '#00dd00',\n  'blue': '#0000ff',\n  'purple': '#a000f0',\n  'brown': '#905018',\n  'black': '#000000',\n  'white': '#ffffff'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { phonemeToSymbol, colorToCode } from '../lib/symbols';\nimport styles from '../styles/PhonemeDisplay.module.css';\n\nfunction symbol(shape, color) {\n  const stroke = '#404040';\n  if (shape === 'circle') {\n    return (<circle cx='50%' cy='50%' r='45%' strokeWidth='5%' stroke={stroke} fill={color} />);\n  } else if (shape === 'square') {\n    return (<rect x='5%' y='5%' width='90%' height='90%' strokeWidth='5%' stroke={stroke} fill={color} />);\n  } else if (shape === 'triangle') {\n    return (<polygon points='5,95 95,95 50,5' strokeWidth='5%' stroke={stroke} fill={color} />);\n  } else if (shape === 'rhombus') {\n    return (<polygon points='50,95 90,50 50,5 10,50' strokeWidth='5%' stroke={stroke} fill={color} />);\n  } else if (shape === 'star') {\n    return (<polygon\n      points='50,0 38.8,34.5 2.4,34.5 31.8,55.9 20.6,90.5 50,69.1 79.4,90.5 68.2,55.9 97.6,34.5 61.2,34.5'\n      strokeWidth='5%'\n      stroke={stroke}\n      fill={color}/>);\n  } else if (shape === 'hexagon') {\n    return (<polygon\n      points='98,50 74,91.6 26,91.6 2,50 26,8.4 74,8.4'\n      strokeWidth='5%'\n      stroke={stroke}\n      fill={color}/>);\n  }\n    return null;\n  ;\n}\n\nfunction PhonemeDisplay(props) {\n  const { shape, color } = phonemeToSymbol(props.phoneme);\n  const colorCode = colorToCode(color);\n\n  const handleDragStart = (e) => {\n    e.stopPropagation();\n    e.dataTransfer.setData('text', props.phoneme);\n  };\n\n  return (\n    <div draggable='true' onDragStart={handleDragStart} className={styles.phonemeDisplay}>\n      <div className={styles.symbolWrap}>\n        <div className={styles.symbol}>\n          <svg width='100%' height='100%' viewBox='0 0 100 100'>\n            {symbol(shape, colorCode)}\n          </svg>\n        </div>\n      </div>\n      <div className={styles.phoneme}>\n        {props.phoneme}\n      </div>\n    </div>\n  );\n}\n\nPhonemeDisplay.propTypes = {\n  phoneme: PropTypes.string,\n};\n\nexport default PhonemeDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PhonemeDisplay from './PhonemeDisplay';\nimport styles from '../styles/FrequencyGraph.module.css';\n\nfunction FrequencyGraph(props) {\n  const max = props.values.length && props.values[0][1];\n  return (\n    <React.Fragment>\n      <div className={styles.graph}>\n        { props.values.map((value) => {\n          const totalPercent = 100 * (value[1] / props.total);\n          const barPercent = 100 * (value[1] / max);\n          return (\n            <React.Fragment key={value[0]}>\n              <div className={styles.percent}>{totalPercent.toFixed(1)}%</div>\n              <div className={styles.label}>\n                <PhonemeDisplay phoneme={value[0]}/>\n              </div>\n              <div className={styles.count}>{value[1]}</div>\n              <div\n                className={styles.bar}\n                style={{ width: `${barPercent}%` }}></div>\n              <div className={styles.spacer}></div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n}\n\nFrequencyGraph.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.array),\n  total: PropTypes.number,\n};\n\nexport default FrequencyGraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PhonemeDisplay from './PhonemeDisplay';\nimport styles from '../styles/WordDisplay.module.css';\n\nfunction WordDisplay(props) {\n  return (\n    <React.Fragment>\n      { props.def && (\n      <div className={styles.wordDisplay}>\n        <div className={styles.word}>\n          {props.def.word}\n        </div>\n        <div className={styles.phonemeWrap}>\n          {props.def.phonemes.map((phoneme, index) => (\n            <PhonemeDisplay\n              key={`${props.def.word}:${phoneme}:${index}`}\n              phoneme={phoneme}/>\n          ))}\n        </div>\n      </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nWordDisplay.propTypes = {\n  def: PropTypes.object,\n};\n\nexport default WordDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WordDisplay from './WordDisplay';\n\nfunction PhraseDisplay(props) {\n  return (\n    <React.Fragment>\n      {props.defs.map((def) => (\n        <WordDisplay key={def.word} def={def} />\n      ))}\n    </React.Fragment>\n  );\n}\n\nPhraseDisplay.propTypes = {\n  defs: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default PhraseDisplay;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFrequencies } from '../lib/frequencies';\nimport FrequencyGraph from './FrequencyGraph';\nimport PhraseDisplay from './PhraseDisplay';\nimport styles from '../styles/Complete.module.css';\n\nfunction Complete(props) {\n  const [isOpen, setIsOpen] = useState(true);\n  const [frequencyIsOpen, setFrequencyIsOpen] = useState(true);\n  const [frequencies, setFrequencies] = useState([]);\n  const [frequenciesTotal, setFrequenciesTotal] = useState(0);\n\n  useEffect(() => {\n    if (frequencyIsOpen) {\n      const [frequencies, total] = getFrequencies(props.defs);\n      setFrequencies(frequencies);\n      setFrequenciesTotal(total);\n    }\n  }, [frequencyIsOpen, props.defs]);\n\n  return (\n    <div className='complete'>\n      <div className={styles.complete}>\n        <div\n          className={styles.title}\n          onClick={() => setIsOpen(!isOpen)}>\n          Complete Words\n        </div>\n        { isOpen && (\n          <React.Fragment>\n            <div\n              className={styles.subtitle}\n              onClick={() => setFrequencyIsOpen(!frequencyIsOpen)}>\n              Phoneme Frequency\n              { frequencyIsOpen && (\n                <FrequencyGraph\n                  values={frequencies}\n                  total={frequenciesTotal}/>\n              )}\n            </div>\n            <PhraseDisplay defs={props.defs}/>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nComplete.propTypes = {\n  defs: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Complete;\n","import phonemes from '../data/phonemes.json';\n\nexport function getFrequencies(defs) {\n  const zeros = phonemes.reduce((zeros, p) => {\n    return { ...zeros, [p]: 0 };\n  }, {});\n  const frequencies = defs.reduce((frequencies, d) => {\n    return d.phonemes.reduce((frequencies, p) => {\n      frequencies[p]++;\n      return frequencies;\n    }, frequencies);\n  }, zeros);\n  const sorted = Object.entries(frequencies).sort((a, b) => b[1] - a[1]);\n  const total = sorted.reduce((total, entry) => total + entry[1], 0);\n  return [sorted, total];\n}\n","//??? groupLayout\nexport const layout = [\n  ['Monophthongs'],\n  ['Diphthongs', 'Nasals'],\n  ['Stops', 'Affricates'],\n  ['Fricatives'],\n  ['Liquids', 'R-colored vowels', 'Semivowels'],\n];\n\n//??? groups\nexport const phonemes = {\n  'Monophthongs' : ['AE', 'IH', 'AA', 'EH', 'IY', 'UW', 'AH', 'AO', 'UH'],\n  'Diphthongs' : ['AW', 'OY', 'AY', 'EY', 'OW'],\n  'Stops' : ['D', 'T', 'G', 'B', 'P', 'K'],\n  'Affricates' : ['CH', 'JH'],\n  'Nasals' : ['NG', 'M', 'N'],\n  'R-colored vowels': ['ER'],\n  'Liquids': ['R', 'L'],\n  'Semivowels': ['Y', 'W'],\n  'Fricatives': ['F', 'HH', 'SH', 'V', 'ZH', 'DH', 'TH', 'Z', 'S']\n};\n\n//??? words \nexport const words = {\n  'AO': 'fought',\n  'AA': 'lot',\n  'IY': 'feet',\n  'UW': 'suit',\n  'EH': 'fed',\n  'IH': 'sit',\n  'UH': 'book',\n  'AH': 'hut',\n  'AE': 'hat',\n  'EY': 'cake',\n  'AY': 'hide',\n  'OW': 'boat',\n  'AW': 'shout',\n  'OY': 'toys',\n  'P': 'peak',\n  'B': 'beat',\n  'T': 'team',\n  'D': 'date',\n  'K': 'kite',\n  'G': 'grow',\n  'CH': 'cheese',\n  'JH': 'jail',\n  'F': 'feel',\n  'V': 'vote',\n  'TH': 'thin',\n  'DH': 'that',\n  'S': 'seat',\n  'Z': 'zip',\n  'SH': 'shout',\n  'ZH': 'azure',\n  'HH': 'heat',\n  'M': 'meet',\n  'N': 'near',\n  'NG': 'sing',\n  'ER': 'hurt',\n  'L': 'late',\n  'R': 'read',\n  'Y': 'yes',\n  'W': 'week'\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { layout, phonemes, words } from '../lib/phonemes.js';\nimport PhonemeDisplay from './PhonemeDisplay';\nimport PhraseDisplay from './PhraseDisplay';\nimport WordDisplay from './WordDisplay';\nimport styles from '../styles/Reference.module.css';\n\nfunction Reference(props) {\n  const [isOpen, setIsOpen] = useState(true);\n  const [input, setInput] = useState('');\n  const [search, setSearch] = useState('');\n  const [searchDefs, setSearchDefs] = useState([]);\n  const [referenceDefs, setReferenceDefs] = useState({});\n\n  useEffect(() => {\n    if (search) {\n      props.decodePhrase(search).then((decoded) => {\n        setSearchDefs(decoded);\n      });\n    } else {\n      setSearchDefs([]);\n    }\n  }, [search]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setSearch(input);\n    setInput('');\n  };\n\n  const handleClear = (e) => {\n    e.preventDefault();\n    setSearch('');\n  };\n\n  useEffect(() => {\n    const phrase = Object.values(words).join(' ');\n    props.decodePhrase(phrase).then((decoded) => {\n        setReferenceDefs(decoded.reduce((dict, def) => {\n          return { ...dict, [def.word]: def };\n        }, {}));\n    });\n  }, []);\n\n  function phonemeKey(phoneme, def) {\n    return (\n      <React.Fragment key={phoneme}>\n        <div className={styles.phonemeKey}>\n          <span className={styles.phoneme}>\n            <PhonemeDisplay phoneme={phoneme}/>\n          </span>\n          <WordDisplay def={def}/>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  function phonemeGroup(group, defs) {\n    return (\n      <React.Fragment key={group}>\n        <div className={styles.groupName}>{group}</div>\n        <div className={styles.group}>\n          {phonemes[group].map((phoneme) => phonemeKey(phoneme, defs[words[phoneme]]))}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  function phonemeColumn(column, defs) {\n    return (\n      <div key={column} className={styles.column}>\n        {column.map((group) => phonemeGroup(group, defs))}\n      </div>\n    );\n  }\n\n  return (\n    <div className='phonemeReference'>\n      <div className={styles.phonemeReference}>\n        <form onSubmit={onSubmit}>\n          <label\n            className={styles.title}\n            htmlFor='search'\n            onClick={() => setIsOpen(!isOpen)}>\n            Phoneme Reference\n          </label>\n          <input id='search' type='text' value={input} onChange={(e) => setInput(e.target.value)}/>\n          <button className='margin-left-4' type='submit'>Search</button>\n          <button className='margin-left-4' onClick={handleClear}>Clear</button>\n        </form>\n        <div className={styles.searchDisplay}>\n          <PhraseDisplay defs={searchDefs}/>\n        </div>\n        <div className={styles.columns}>\n          { isOpen && layout.map((column) => phonemeColumn(column, referenceDefs)) }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nReference.propTypes = {\n  decodePhrase: PropTypes.func,\n};\n\nexport default Reference;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PhonemeDisplay from './PhonemeDisplay';\nimport styles from '../styles/TestWord.module.css';\n\nfunction WordDisplay(props) {\n  const [shownCount, setShownCount] = useState(0);\n  const isComplete = props.isActive && (shownCount === props.def.phonemes.length);\n  const classes = (props.isActive ? ' ' + styles.active : '') + (isComplete ? ' ' + styles.complete : '');\n\n  const handleDoubleClick = (e) => {\n    if (isComplete) {\n      props.onComplete(props.def);\n    }\n    if (props.isActive) {\n      setShownCount(0);\n    }\n    props.onActivate(props.def.word, !props.isActive);\n  };\n\n  const handleDragOver = (e) => {\n    if (props.isActive && !isComplete) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const dropPhoneme = e.dataTransfer.getData('text');\n    if (props.isActive && !isComplete &&\n      (dropPhoneme === props.def.phonemes[shownCount])) {\n      setShownCount(shownCount + 1);\n    }\n  };\n\n  const createButton = (isComplete, { def, onRemove, onComplete }) => {\n    const path = isComplete ? 'M5 50 L 50 95 L 95 5' : 'M5 5 L 95 95 M 5 95 L 95 5';\n    return (\n      <button\n        className={styles.button}\n        onClick={ isComplete ? () => onComplete(def) : () => onRemove(def) }>\n        <svg width='100%' height='100%' viewBox='0 0 100 100'>\n          <path d={path} fill='transparent' stroke='#808080' strokeWidth='10'/>\n        </svg>\n      </button>);\n  };\n\n  return (\n    <React.Fragment>\n      { props.def && (\n        <div\n          className={styles.testWord + classes}\n          onMouseDown={(e) => e.preventDefault()}\n          onDoubleClick={handleDoubleClick}\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}>\n          <div className={styles.topRow}>\n            <div className={styles.word}>\n              {props.def.word}\n            </div>\n            { props.isActive &&\n                createButton(isComplete, props) }\n          </div>\n          <div className={styles.phonemeWrap + classes}>\n            { props.def.phonemes.map((phoneme, index) => (\n              (index < shownCount) &&\n              <PhonemeDisplay\n                key={phoneme}\n                phoneme={phoneme} />\n            ))}\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nWordDisplay.propTypes = {\n  def: PropTypes.object,\n  isActive: PropTypes.bool,\n  onActivate: PropTypes.func,\n  onRemove: PropTypes.func,\n  onComplete: PropTypes.func,\n};\n\nexport default WordDisplay;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TestWord from './TestWord';\nimport styles from '../styles/Test.module.css';\n\nfunction Test(props) {\n  const [isOpen, setIsOpen] = useState(true);\n  const [input, setInput] = useState('');\n  const [add, setAdd] = useState('');\n  const [activeWord, setActiveWord] = useState();\n\n  useEffect(() => {\n    if (add) {\n      props.decodePhrase(add).then((decoded) => {\n        props.onAdd(decoded);\n      });\n      setAdd('');\n      document.getElementById('input').focus();\n    }\n  }, [add]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setAdd(input);\n    setInput('');\n  };\n\n  const handleActivate = (word, isActive) => {\n    setActiveWord(isActive ? word : undefined);\n  };\n\n  return (\n    <div className='testWords'>\n      <div className={styles.testWords}>\n        <form onSubmit={onSubmit}>\n          <label\n            className={styles.title}\n            htmlFor='input'\n            onClick={() => setIsOpen(!isOpen)}>\n            Test Words\n          </label>\n          <input id='input' type='text' value={input} onChange={(e) => setInput(e.target.value)}/>\n          <button className='margin-left-4' type='submit'>Add</button>\n        </form>\n        <div className={styles.inactiveWords}>\n          { isOpen && props.defs.filter((d) => d.word !== activeWord).map((def) =>\n            (<TestWord\n              key={def.word}\n              def={def}\n              isActive={def.word === activeWord}\n              onActivate={handleActivate}/>\n            ))}\n        </div>\n        <div className={styles.activeWord}>\n          { isOpen && props.defs.filter((d) => d.word === activeWord).map((def) =>\n              (<TestWord\n                key={def.word}\n                def={def}\n                isActive={def.word === activeWord}\n                onActivate={handleActivate}\n                onRemove={props.onRemove}\n                onComplete={props.onComplete}/>\n              ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTest.propTypes = {\n  defs: PropTypes.arrayOf(PropTypes.object),\n  decodePhrase: PropTypes.func,\n  onAdd: PropTypes.func,\n  onRemove: PropTypes.func,\n  onComplete: PropTypes.func,\n};\n\nexport default Test;\n","import React, { useState } from 'react';\nimport commonData from '../data/_commonShort';\nimport decodedData from '../data/decoded.json';\nimport { useLocalStorage } from '../lib/storage';\nimport decoder from '../lib/decoder';\nimport Common from './Common';\nimport Complete from './Complete';\nimport Reference from './Reference';\nimport Test from './Test';\nimport styles from '../styles/App.module.css';\n\nfunction App(props) {\n  const [saveUrl, setSaveUrl] = useState(undefined);\n  const [test, setTest] = useLocalStorage('test', []);\n  const [complete, setComplete] = useLocalStorage('complete', []);\n  const [decoded, setDecoded] = useLocalStorage('decoded', decodedData);\n  const decodePhrase = decoder(decoded, setDecoded).decodePhrase;\n  const commonWords = commonData.map((c) => c.word);\n  const [common, setCommon] = useState([]);\n  const [commonIndex, setCommonIndex] = useLocalStorage('commonIndex', 0);\n  //??? get common (defs) up to the index\n  //??? add setInterval to query more\n\n  const save = () => {\n    const testWords = test.map((t) => t.word);\n    const completeWords = complete.map((c) => c.word);\n    const data = {\n      decoded,\n      test: testWords,\n      complete: completeWords,\n    };\n    const file = new File([JSON.stringify(data)], '');\n    setSaveUrl(window.URL.createObjectURL(file));\n  };\n\n  //??? add load\n\n  const addTest = (defs) => {\n    setTest([...test, ...defs]);\n  };\n\n  const removeTest = (def) => {\n    setTest(test.filter((t) => t.word !== def.word));\n  };\n\n  const addComplete = (def) => {\n    setComplete([def, ...(complete.filter((c) => c.word !== def.word))]);\n    setTest(test.filter((t) => t.word !== def.word));\n  };\n\n  return (\n    <React.Fragment>\n      <header className={styles.header}>\n        <h1>Phoneme Finder</h1>\n        { saveUrl &&\n        <a href={saveUrl} download='phonmeFinder.json'>Download</a>\n        }\n        <button onClick={save}>Save</button>\n      </header>\n      <main>\n        <Test\n          defs={test}\n          decodePhrase={decodePhrase}\n          onAdd={addTest}\n          onRemove={removeTest}\n          onComplete={addComplete}/>\n        <Reference decodePhrase={decodePhrase}/>\n        <Complete defs={complete}/>\n        <Common defs={common}/>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}